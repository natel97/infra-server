// Code generated by MockGen. DO NOT EDIT.
// Source: filesystem.go
//
// Generated by this command:
//
//	mockgen -source=filesystem.go -destination=filesystem_mock.go -package=adapters
//
// Package adapters is a generated GoMock package.
package adapters

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFileSystemHandler is a mock of FileSystemHandler interface.
type MockFileSystemHandler struct {
	ctrl     *gomock.Controller
	recorder *MockFileSystemHandlerMockRecorder
}

// MockFileSystemHandlerMockRecorder is the mock recorder for MockFileSystemHandler.
type MockFileSystemHandlerMockRecorder struct {
	mock *MockFileSystemHandler
}

// NewMockFileSystemHandler creates a new mock instance.
func NewMockFileSystemHandler(ctrl *gomock.Controller) *MockFileSystemHandler {
	mock := &MockFileSystemHandler{ctrl: ctrl}
	mock.recorder = &MockFileSystemHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileSystemHandler) EXPECT() *MockFileSystemHandlerMockRecorder {
	return m.recorder
}

// CreateFile mocks base method.
func (m *MockFileSystemHandler) CreateFile(name, content string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFile", name, content)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFile indicates an expected call of CreateFile.
func (mr *MockFileSystemHandlerMockRecorder) CreateFile(name, content any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*MockFileSystemHandler)(nil).CreateFile), name, content)
}
